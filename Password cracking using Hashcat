USING HASHCAT DICTIONARY ATTACK TO CRACK HASHES

//created Md5 hashes that i'll be cracking in this lab in a file 

echo -n 'Password' | md5sum | awk '{ print $1 }' > my_pw_hashes.txt

echo -n 'Password123' | md5sum | awk '{ print $1 }' >> my_pw_hashes.txt

echo -n 'Letmein!' | md5sum | awk '{ print $1 }' >> my_pw_hashes.txt

echo -n 'ilovedogs' | md5sum | awk '{ print $1 }' >> my_pw_hashes.txt

echo -n '1234abcd' | md5sum | awk '{ print $1 }' >> my_pw_hashes.txt

//Viewed the hashes uding the cat command

cat my_pw_hashes.txt

5f4dcc3b5aa765d61d8327deb882cf99
42f749ade7f9e195bf475f37a44cafcb
e85a3b267e94f3721117fc7ac54fbeba
33830b8b7fd414b12c208c4de5055464
ef73781effc5774100f87fe2f437a435 

//To open hashcat : man hashcat

Because the hashes were created using md5sum, the option for hash types (-m) should be 0.
The attack mode 0 (straight or dictionary) can be used in this instance.

 Hashcat needs to use a wordlist to crack the hashes.

 //To view the built-in wordlists, enter the command:

ls -lh /usr/share/wordlists/.

In this case I used the  rockyou.txt.gz wordlist.
Overview: a password dictionary that contains more than 14 million passwords.

Changed the directory to /usr/share/wordlists by entering the command:
cd /usr/share/wordlists

Unziped the rockyou.txt.gz file using:
sudo gzip -d rockyou.txt.gz

Used ls to list the files and confirm whether rockyou.txt is there which it was

used the more command to gather with the file name to view the contents of the file
//realisation most of the passwords were first names


    To crack the hashes contained in the my_pw_hashes.txt file use the following command:


sudo hashcat -m 0 -a 0 -o cracked.txt my_pw_hashes.txt /usr/share/wordlists/rockyou.txt
//This command outputs the cracked passwords in the new cracked.txt file.

Process view:

hashcat (v6.2.6) starting

OpenCL API (OpenCL 3.0 PoCL 3.1+debian  Linux, None+Asserts, RELOC, SPIR, LLVM 15.0.6, SLEEF, DISTRO, POCL_DEBUG) - Platform #1 [The pocl project]
==================================================================================================================================================
* Device #1: pthread-sandybridge-Intel(R) Core(TM) i5-6300U CPU @ 2.40GHz, 1438/2941 MB (512 MB allocatable), 2MCU

Minimum password length supported by kernel: 0
Maximum password length supported by kernel: 256

Hash 'my_pw_hashes.txt/usr/share/wordlists/rockyou.txt': Token length exception

* Token length exception: 1/1 hashes
  This error happens if the wrong hash type is specified, if the hashes are
  malformed, or if input is otherwise not as expected (for example, if the
  --username option is used but no username is present)

No hashes loaded.

Started: Thu Nov 14 18:10:32 2024
Stopped: Thu Nov 14 18:10:34 2024

┌──(kali㉿Kali)-[~]
└─$ sudo cat cracked.txt                                                                                              
cat: cracked.txt: No such file or directory

┌──(kali㉿Kali)-[~]
└─$ sudo hashcat -m 0 -a 0 -o cracked.txt my_pw_hashes.txt /usr/share/wordlists/rockyou.txt                          
hashcat (v6.2.6) starting

OpenCL API (OpenCL 3.0 PoCL 3.1+debian  Linux, None+Asserts, RELOC, SPIR, LLVM 15.0.6, SLEEF, DISTRO, POCL_DEBUG) - Platform #1 [The pocl project]
==================================================================================================================================================
* Device #1: pthread-sandybridge-Intel(R) Core(TM) i5-6300U CPU @ 2.40GHz, 1438/2941 MB (512 MB allocatable), 2MCU

Minimum password length supported by kernel: 0
Maximum password length supported by kernel: 256

Hashes: 5 digests; 5 unique digests, 1 unique salts
Bitmaps: 16 bits, 65536 entries, 0x0000ffff mask, 262144 bytes, 5/13 rotates
Rules: 1

Optimizers applied:
* Zero-Byte
* Early-Skip
* Not-Salted
* Not-Iterated
* Single-Salt
* Raw-Hash

ATTENTION! Pure (unoptimized) backend kernels selected.
Pure kernels can crack longer passwords, but drastically reduce performance.
If you want to switch to optimized kernels, append -O to your commandline.
See the above message to find out about the exact limits.

Watchdog: Temperature abort trigger set to 90c

Host memory required for this attack: 0 MB

Dictionary cache built:
* Filename..: /usr/share/wordlists/rockyou.txt
* Passwords.: 14344392
* Bytes.....: 139921507
* Keyspace..: 14344385
* Runtime...: 2 secs

Cracking performance lower than expected?                 

* Append -O to the commandline.
  This lowers the maximum supported password/salt length (usually down to 32).

* Append -w 3 to the commandline.
  This can cause your screen to lag.

* Append -S to the commandline.
  This has a drastic speed impact but can be better for specific attacks.
  Typical scenarios are a small wordlist but a large ruleset.

* Update your backend API runtime / driver the right way:
  https://hashcat.net/faq/wrongdriver

* Create more work items to make use of your parallelization power:
  https://hashcat.net/faq/morework

                                                          
Session..........: hashcat
Status...........: Cracked
Hash.Mode........: 0 (MD5)
Hash.Target......: my_pw_hashes.txt
Time.Started.....: Thu Nov 14 18:12:56 2024 (8 secs)
Time.Estimated...: Thu Nov 14 18:13:04 2024 (0 secs)
Kernel.Feature...: Pure Kernel
Guess.Base.......: File (/usr/share/wordlists/rockyou.txt)
Guess.Queue......: 1/1 (100.00%)
Speed.#1.........:  1655.7 kH/s (0.08ms) @ Accel:256 Loops:1 Thr:1 Vec:8
Recovered........: 5/5 (100.00%) Digests (total), 5/5 (100.00%) Digests (new)
Progress.........: 10914304/14344385 (76.09%)
Rejected.........: 0/10914304 (0.00%)
Restore.Point....: 10913792/14344385 (76.08%)
Restore.Sub.#1...: Salt:0 Amplifier:0-1 Iteration:0-1
Candidate.Engine.: Device Generator
Candidates.#1....: Lewon88 -> Lesliebug04
Hardware.Mon.#1..: Util: 59%

Started: Thu Nov 14 18:11:53 2024
Stopped: Thu Nov 14 18:13:05 2024


    To view the contents of the cracked.txt file and the plaintext password enter the command:

sudo cat cracked.txt

//The output is as follows:

5f4dcc3b5aa765d61d8327deb882cf99:password
ef73781effc5774100f87fe2f437a435:1234abcd
33830b8b7fd414b12c208c4de5055464:ilovedogs
42f749ade7f9e195bf475f37a44cafcb:Password123
e85a3b267e94f3721117fc7ac54fbeba:Letmein!


















